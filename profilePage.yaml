AWSTemplateFormatVersion: "2010-09-09"
Description: A template for setting up a full CI/CD pipeline and serverless infrastructure for a static website.

Resources:
  # Pipeline Roles
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                  - "lambda:*"
                  - "cloudwatch:*"
                  - "logs:*"
                Resource: "*"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                  - "logs:*"
                  - "cloudwatch:*"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:UploadLayerPart"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:PutImage"
                Resource: "*"
  # Build Project
  MyCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MyCodeBuildProject
      Description: "CodeBuild project for building static website"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0
      Source:
        Type: GITHUB
        Location: "https://github.com/FelipeNogueraP/notus-pro-react.git"
        SourceVersion: master
        GitCloneDepth: 1
        BuildSpec: buildspec.yml

  # Where to store the build output
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket

  # Wekbook for Github to trigger the Pipeline
  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken # Token stored on AWS Secrets Manager
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/{master}"
      TargetPipeline: !Ref MyPipeline
      TargetPipelineVersion: !GetAtt MyPipeline.Version
      TargetAction: SourceAction # Replace with the name of your source action
      RegisterWithThirdParty: true

  # Pipeline definition
  MyPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: [FelipeNogueraP]
                Repo: [notus-pro-react.git]
                Branch: master
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceOutput # This will be used as input in the next stage
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref MyCodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput # This will be used as input in the next stage
              RunOrder: 1
        -  # Deploy stage definition
